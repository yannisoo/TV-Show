version: '3.7'
services:
  ##############
  ## POSTGRES ##
  postgres_db:
    image: postgres
    networks:
      - database
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=demo
    restart: always
    volumes:
      - ./TV-Show-Back/database/data/dev:/var/lib/postgresql/data
    container_name: postgres_db
  ##############
  ## TV-Show-Back ##
  backend:
    build:
      context: ./TV-Show-Back
      dockerfile: Dockerfile.dev
    networks:
      - webapp
      - database
    ports:
      - 5500:5500
    environment:
      - SECRET="¯\_(ツ)_/¯"
    volumes:
      - ./TV-Show-Back/node_modules:/app/node_modules
      - ./TV-Show-Back/src:/app/src
    depends_on:
      - postgres_db
    restart: always
    command: ['./wait-for-it.sh', 'postgres_db:5432', '--', 'nodemon']
    container_name: TV-Show-Back
  #############
  ## TV-Show-React ##
  frontend:
    build:
      context: ./TV-Show-react
      dockerfile: Dockerfile.dev
    volumes:
      - ./TV-Show-react/node_modules:/app/node_modules
      - ./TV-Show-react/src:/app/src
      - ./TV-Show-react/public:/app/public
    networks:
      - webapp
    ports:
      - 3000:3000
    command: npm start
    stdin_open: true
    restart: always
    container_name: TV-Show-react
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
